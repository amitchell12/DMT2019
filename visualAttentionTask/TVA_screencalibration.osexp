---
API: 2.1
OpenSesame: 3.2.7b1
Platform: posix
---
set width 1920
set uniform_coordinates no
set transparent_variables no
set title Insert_Resolution_here
set synth_backend legacy
set subject_parity even
set subject_nr 0
set start experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set sampler_backend legacy
set round_decimals 2
set mouse_backend psycho
set keyboard_backend psycho
set height 1080
set fullscreen no
set form_clicks no
set foreground white
set font_underline no
set font_size 18
set font_italic no
set font_family mono
set font_bold no
set experiment_path "/home/experimenter/git/DMT2019/visualAttentionTask"
set disable_garbage_collection yes
set description "Default description"
set coordinates relative
set compensation 0
set color_backend psycho
set clock_backend psycho
set canvas_backend psycho
set bidi no
set background black

define inline_script Adjust_monitor
	set description "Executes Python code"
	set _run ""
	___prepare__
	#you only need to insert the four parameters (see below) 
	# + dont forget to set the resolution in the upper most item on the in the item overview on the left (name: TVA test)!!
	# the first three settings can simply be adjusted to your experimental settings
	# use the sample experiment in the calibration folder to adjust letter size and insert it below
	
	
	
	##insert your parameters here
	screen_width = 31 ## cm width of your screen
	resolution_width = 1920 ## pixel width of your screen
	screen_distance = 40 ## how far from the screen will participants be seated
	
	letter_size = 127 ## must correspond to a visual angle of 2.7; 
	# calibrate letter size in this sample experiment by inserting the three values above and running the experiment; 
	# adjust letter_size till its actual size corresponds to the centimeter value that is shown when you run the experiment
	
	
	
	
	
	# from here: the positioning of the stimuli on the screen is determined
	import math
	
	# define tangez function so that seating distance can be related to stimuli size
	def tan(x):
	    import math
	    tangenz = math.tan((math.pi/180)*x)
	    return tangenz
		
		
	# this formula determines the size of the letters that is needed in cm; result see when you run the experiment	
	letter_cm= 2*screen_distance*tan(2.7/2)
	exp.set('letter_cm', letter_cm)
	
	
	
	
	
	# this formula converts visual angle to cm
	radius = 2*screen_distance*tan(7.5/2)
	
	#compute coordinates for the letter positioning
	Y_at_ZeroX = (resolution_width / screen_width)*radius # on the axes
	Y_and_X = (Y_at_ZeroX/math.sqrt(2)) # on the diagonal
	
	
	#coordinates for the presentation
	
	c1 = -Y_at_ZeroX, 0
	c2 = -Y_and_X, -Y_and_X
	c3 = Y_and_X, -Y_and_X
	c4 = Y_at_ZeroX, 0
	c5 = Y_and_X, Y_and_X
	c6 = -Y_and_X, Y_and_X
	
	
	p1 = c1[0]
	p2 = c1[1]
	p3 = c2[0]
	p4 = c2[1]
	p5 = c3[0]
	p6 = c3[1]
	p7 = c4[0]
	p8 = c4[1]
	p9 = c5[0]
	p10 = c5[1]
	p11 = c6[0]
	p12 = c6[1]
	
	
	exp.set('p1', p1)
	exp.set('p2', p2)
	exp.set('p3', p3)
	exp.set('p4', p4)
	exp.set('p5', p5)
	exp.set('p6', p6)
	exp.set('p7', p7)
	exp.set('p8', p8)
	exp.set('p9', p9)
	exp.set('p10', p10)
	exp.set('p11', p11)
	exp.set('p12', p12)
	
	exp.set('letter_size', letter_size)
	__end__

define sketchpad Letters
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=red font_bold=no font_family=Arial font_italic=no font_size="[letter_size]" html=yes show_if=always text=A x="[p1]" y="[p2]" z_index=0
	draw textline center=1 color=red font_bold=no font_family=Arial font_italic=no font_size="[letter_size]" html=yes show_if=always text=B x="[p3]" y="[p4]" z_index=0
	draw textline center=1 color=red font_bold=no font_family=Arial font_italic=no font_size="[letter_size]" html=yes show_if=always text=C x="[p5]" y="[p6]" z_index=0
	draw textline center=1 color=red font_bold=no font_family=Arial font_italic=no font_size="[letter_size]" html=yes show_if=always text=D x="[p7]" y="[p8]" z_index=0
	draw textline center=1 color=red font_bold=no font_family=Arial font_italic=no font_size="[letter_size]" html=yes show_if=always text=E x="[p9]" y="[p10]" z_index=0
	draw textline center=1 color=red font_bold=no font_family=Arial font_italic=no font_size="[letter_size]" html=yes show_if=always text=F x="[p11]" y="[p12]" z_index=0
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=24 html=yes show_if=always text="Letters must be [letter_cm] cm" x=0 y=0 z_index=0
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=24 html=yes show_if=always text="on your screen." x=0 y=32 z_index=0

define sequence experiment
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run Adjust_monitor always
	run Letters always

